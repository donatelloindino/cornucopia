include $(top_srcdir)/Makefile.decl

NULL =

AM_CPPFLAGS = \
	-I$(top_srcdir) \
	$(GLIB_CFLAGS) \
	$(DBUS_CFLAGS) \
	$(NULL)

noinst_PROGRAMS = $(TEST_PROGS)

progs_ldadd = $(GLIB_LIBS) $(DBUS_LIBS) ../fsoframework/libfsoframework.la

modlibexecdir = $(libdir)/cornucopia/modules/tests/$(MODULE_ARCH)
modlibexec_LTLIBRARIES =

#
# smartkeyfile test
#
TEST_PROGS += testsmartkeyfile
testsmartkeyfile_VALASOURCES = testsmartkeyfile.vala
testsmartkeyfile_SOURCES = testsmartkeyfile.c testsmartkeyfile.h
$(testsmartkeyfile_SOURCES): $(testsmartkeyfile_VALASOURCES)
	$(VALAC) -C --basedir $(top_srcdir) --vapidir $(top_srcdir)/fsoframework --pkg glib-2.0 --pkg gio-2.0 --pkg fsoframework-2.0 $^
	touch $@
testsmartkeyfile_LDADD = $(progs_ldadd)
EXTRA_DIST += $(testsmartkeyfile_VALASOURCES)

#
# logger test
#
TEST_PROGS += testlogger
testlogger_VALASOURCES = testlogger.vala
testlogger_SOURCES = testlogger.c testlogger.h
$(testlogger_SOURCES): $(testlogger_VALASOURCES)
	$(VALAC) -C --basedir $(top_srcdir) --vapidir $(top_srcdir)/fsoframework --pkg glib-2.0 --pkg gio-2.0 --pkg fsoframework-2.0 $^
	touch $@
testlogger_LDADD = $(progs_ldadd)
EXTRA_DIST += $(testlogger_VALASOURCES)

#
# plugin for the plugin test
#
modlibexec_LTLIBRARIES += plugin.la
plugin_la_SOURCES = plugin.c plugin.h
plugin_la_VALASOURCES = plugin.vala
$(plugin_la_SOURCES): $(plugin_la_VALASOURCES)
	$(VALAC) -C --basedir $(top_srcdir) --vapidir $(top_srcdir)/fsoframework --pkg glib-2.0 --pkg fsoframework-2.0 $^
	touch $@
plugin_la_LIBADD = $(progs_ldadd)
plugin_la_LDFLAGS = -no-undefined -module -avoid-version
plugin_la_LIBTOOLFLAGS = --tag=disable-static

#
# plugin1 for the plugin1 test
#
modlibexec_LTLIBRARIES += plugin1.la
plugin1_la_SOURCES = plugin1.c plugin1.h
plugin1_la_VALASOURCES = plugin1.vala
$(plugin1_la_SOURCES): $(plugin1_la_VALASOURCES)
	$(VALAC) -C --basedir $(top_srcdir) --vapidir $(top_srcdir)/fsoframework --pkg glib-2.0 --pkg fsoframework-2.0 $^
	touch $@
plugin1_la_LIBADD = $(progs_ldadd)
plugin1_la_LDFLAGS = -no-undefined -module -avoid-version
plugin1_la_LIBTOOLFLAGS = --tag=disable-static

#
# plugin2 for the plugin2 test
#
modlibexec_LTLIBRARIES += plugin2.la
plugin2_la_SOURCES = plugin2.c plugin2.h
plugin2_la_VALASOURCES = plugin2.vala
$(plugin2_la_SOURCES): $(plugin2_la_VALASOURCES)
	$(VALAC) -C --basedir $(top_srcdir) --vapidir $(top_srcdir)/fsoframework --pkg glib-2.0 --pkg fsoframework-2.0 $^
	touch $@
plugin2_la_LIBADD = $(progs_ldadd)
plugin2_la_LDFLAGS = -no-undefined -module -avoid-version
plugin2_la_LIBTOOLFLAGS = --tag=disable-static

#
# plugin3 for the plugin3 test
#
modlibexec_LTLIBRARIES += plugin3.la
plugin3_la_SOURCES = plugin3.c plugin3.h
plugin3_la_VALASOURCES = plugin3.vala
$(plugin3_la_SOURCES): $(plugin3_la_VALASOURCES)
	$(VALAC) -C --basedir $(top_srcdir) --vapidir $(top_srcdir)/fsoframework --pkg glib-2.0 --pkg fsoframework-2.0 $^
	touch $@
plugin3_la_LIBADD = $(progs_ldadd)
plugin3_la_LDFLAGS = -no-undefined -module -avoid-version
plugin3_la_LIBTOOLFLAGS = --tag=disable-static

#
# plugin test
#
TEST_PROGS += testplugin
testplugin_VALASOURCES = testplugin.vala
testplugin_SOURCES = testplugin.c testplugin.h
$(testplugin_SOURCES): $(testplugin_VALASOURCES)
	$(VALAC) -C --basedir $(top_srcdir) --vapidir $(top_srcdir)/fsoframework --pkg glib-2.0 --pkg fsoframework-2.0 $^
	touch $@
testplugin_LDADD = $(progs_ldadd)
EXTRA_DIST += $(testplugin_VALASOURCES)

# TEST_PROGS += testarraylist
# testarraylist_VALASOURCES = testarraylist.vala
# testarraylist_SOURCES = testarraylist.c testarraylist.h
# $(testarraylist_SOURCES): $(testarraylist_VALASOURCES)
# 	$(VALAC) -C --basedir $(top_srcdir) --vapidir $(top_srcdir)/fsoframework --pkg fsoframework-2.0 $^
# 	touch $@
# testarraylist_LDADD = $(progs_ldadd)
# EXTRA_DIST += $(testarraylist_VALASOURCES)
#
# TEST_PROGS += testhashmap
# testhashmap_VALASOURCES = testhashmap.vala
# testhashmap_SOURCES = testhashmap.c testhashmap.h
# $(testhashmap_SOURCES): $(testhashmap_VALASOURCES)
# 	$(VALAC) -C --basedir $(top_srcdir) --vapidir $(top_srcdir)/fsoframework --pkg fsoframework-2.0 $^
# 	touch $@
# testhashmap_LDADD = $(progs_ldadd)
# EXTRA_DIST += $(testhashmap_VALASOURCES)
#
# TEST_PROGS += testhashset
# testhashset_VALASOURCES = testhashset.vala
# testhashset_SOURCES = testhashset.c testhashset.h
# $(testhashset_SOURCES): $(testhashset_VALASOURCES)
# 	$(VALAC) -C --basedir $(top_srcdir) --vapidir $(top_srcdir)/fsoframework --pkg fsoframework-2.0 $^
# 	touch $@
# testhashset_LDADD = $(progs_ldadd)
# EXTRA_DIST += $(testhashset_VALASOURCES)
#

CLEANFILES = \
    $(TEST_PROGS) \
    *.? \
    $(NULL)

MAINTAINERCLEANFILES = \
  Makefile.in \
  $(NULL)
