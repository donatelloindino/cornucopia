/* fsoframework-2.0.vapi generated by valac, do not modify. */

[CCode (cprefix = "FsoFramework", lower_case_cprefix = "fso_framework_")]
namespace FsoFramework {
	[CCode (cheader_filename = "fsoframework/logger.h")]
	public abstract class AbstractLogger : FsoFramework.Logger, GLib.Object {
		protected string destination;
		protected string domain;
		protected uint level;
		protected virtual string format (string message, string level);
		public static string levelToString (GLib.LogLevelFlags level);
		public AbstractLogger (string domain);
		public static GLib.LogLevelFlags stringToLevel (string level);
		protected virtual void write (string message);
	}
	[CCode (cheader_filename = "fsoframework/subsystem.h")]
	public abstract class AbstractSubsystem : FsoFramework.Subsystem, GLib.Object {
		public void loadPlugins ();
		public AbstractSubsystem (string name);
	}
	[CCode (cheader_filename = "fsoframework/plugin.h")]
	public class BasePlugin : FsoFramework.Plugin, GLib.Object {
		public BasePlugin (string filename);
	}
	[CCode (cheader_filename = "fsoframework/logger.h")]
	public class FileLogger : FsoFramework.AbstractLogger {
		public FileLogger (string domain);
		public void setFile (string filename, bool append = false);
		protected override void write (string message);
	}
	[CCode (cheader_filename = "fsoframework/smartkeyfile.h")]
	public class SmartKeyFile : GLib.Object {
		public bool boolValue (string section, string key, bool defaultvalue);
		public int intValue (string section, string key, int defaultvalue);
		public bool loadFromFile (string filename);
		public SmartKeyFile ();
		public GLib.List<string> sectionsWithPrefix (string? prefix = null);
		public string stringValue (string section, string key, string defaultvalue);
	}
	[CCode (cheader_filename = "fsoframework/logger.h")]
	public class SyslogLogger : FsoFramework.AbstractLogger {
		protected override string format (string message, string level);
		public SyslogLogger (string domain);
		protected override void write (string message);
	}
	[CCode (cheader_filename = "fsoframework/logger.h")]
	public interface Logger : GLib.Object {
		public abstract void debug (string message);
		public abstract void error (string message);
		public abstract void info (string message);
		public abstract void setDestination (string destination);
		public abstract void setLevel (GLib.LogLevelFlags level);
		public abstract void warning (string message);
	}
	[CCode (cheader_filename = "fsoframework/plugin.h")]
	public interface Plugin : GLib.Object {
		public abstract FsoFramework.PluginInfo info ();
		public abstract void load () throws FsoFramework.PluginError;
	}
	[CCode (cheader_filename = "fsoframework/subsystem.h")]
	public interface Subsystem : GLib.Object {
	}
	[CCode (type_id = "FSO_FRAMEWORK_TYPE_PLUGIN_INFO", cheader_filename = "fsoframework/plugin.h")]
	public struct PluginInfo {
		public string name;
		public bool loaded;
	}
	[CCode (cprefix = "FSO_FRAMEWORK_PLUGIN_ERROR_", cheader_filename = "fsoframework/plugin.h")]
	public errordomain PluginError {
		UNABLE_TO_LOAD,
		FACTORY_NOT_FOUND,
	}
	[CCode (cheader_filename = "fsoframework/plugin.h")]
	public delegate string FactoryFunc ();
	[CCode (cheader_filename = "fsoframework/common.h")]
	public const string DEFAULT_LOG_DESTINATION;
	[CCode (cheader_filename = "fsoframework/common.h")]
	public const string DEFAULT_LOG_LEVEL;
	[CCode (cheader_filename = "fsoframework/common.h")]
	public const string DEFAULT_LOG_TYPE;
	[CCode (cheader_filename = "fsoframework/common.h")]
	public static FsoFramework.SmartKeyFile theMasterKeyFile ();
	[CCode (cheader_filename = "fsoframework/common.h")]
	public static FsoFramework.Logger theMasterLogger (string domain);
}
